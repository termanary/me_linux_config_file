# mate :
# Power : acpi : acpi
# sound : alsamixer : alsa-utils pulseaudio
# Wifi-GUI : network-manager-gnome
# desktop icon : mate-tweak
# WPS icon : xdg-utils
# wubi : fcitx-table-wbpy
# java : openjdk-8-jdk
# gnome-disks : gnome-disk-utility
# Linux startup usb :
# sudo mkfs.vfat /dev/sdb
# sudo dd=*.iso of=/dev/sdb
# Delete up : efibootmgr
# sudo efibootmgr -B -b 000
# screenshot : gnome-screenshot
# gnome-screenshot -ai

# mate desktop icon : mate-tweak
# WPS desktop icon :xdg-utils

#PS1='\u@\h:\w$ '

export HISTSIZE=100000
export HISTTIMEFORMAT="%F %T "
export HISTFILESIZE=1000000
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
# could not add '/' at the end of path
export EDITOR=/usr/local/bin/vim
export PYTHONSTARTUP=~/.pythonstartup
export PYTHONPATH=.:$PYTHONPATH
export PATH="$PATH:\
/media/MATLAB/Matlab_R2018a/bin:\
"

#it's necessary 
alias grep='grep --color=auto -E --binary-files=without-match '
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias l='ls --color=auto '
alias ls='ls --color=auto '
alias la='ls -A --color=auto '
alias lh='ls -lh --color=auto '
alias info='info --vi-keys'

alias c.='cd ../;ls'
alias cs='cd ~/script/;ls'
# alias ca='cd ~/Acm/Tmp/;ls'
alias ch='cd ~/hdoj/tmp/;ls'
alias ck='cd ~/poj/tmp/;ls'
alias cf='cd ~/codeforce/;ls'
alias cv='cd /media/Program/verilog/first/;ls'

alias df='df -h '
alias du='du -h '
alias free='free -h '
# alias less='less -N'

alias rm='rm -v '
alias cp='cp -iv '
alias mv='mv -iv '

alias p='python3'
alias sym="python3 -i -E -c \"from sympy import * ; x,y,z=symbols('x y z') ; print('x,y,z has been defined\n')\" "
alias e='emacs -nw'
alias s='screen '
alias gdb='gdbtui '
alias o='octave-cli'
alias matlab='matlab -nosplash -nodesktop '
alias vi="vim --clean "

alias dos="sed -i 's/\r*$/\r/' "
alias unix="sed -i 's/\r*$//' "

#copy from stackoverflow
#g () { emacs --eval "(insert \"autocmd\") " ; }
gd () { emacs --eval "(gdb \"gdb -i=mi $*\")" ; }

# shell function :
# argument could get like this:
v ()
{
    if [ $# -gt 2 ]
    then
        vim $*
    elif [ $# -le 2 ]
    then
        vim -O $*
    else
        echo 'ERROR'
    fi
}

tm ()
{
    if [ $# -eq 0 ]
    then
        echo "Argument Needed!"
    elif [ $# -gt 1 ]
    then
        echo "Too many argument!"
    else

        if [ $1 == "c" ]
        then
            touch main.c input.tst
            if ! [ -s "main.c" ]
            then
                cat ~/.vim/example/main.c > ./main.c
            fi

        elif [ $1 == "p" ]
        then
            touch main.cpp input.tst
            if ! [ -s "main.cpp" ]
            then
                cat ~/.vim/example/main.cpp > ./main.cpp
            fi

        elif [ $1 == "v" ]
        then
            touch main.v main_tb.v
            if ! [ -s "main_tb.v" ]
            then
                cat ~/.vim/example/main_tb.v > ./main_tb.v
            fi

        else
            echo "Do not know the argument!"
        fi
    fi
}

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# $TTY : could just used in zsh , not bash
# vim_zsh() { vim < $TTY; zle redisplay; }
# next line is better from arch wiki :
vim_zsh() { BUFFER="vim"; zle accept-line; }
zle -N vim_zsh
bindkey 'v' vim_zsh

htop_zsh() { htop < $TTY; zle redisplay; }
zle -N htop_zsh 
bindkey 'h' htop_zsh

autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# bash bind key :
# bind -x '"\ev":vim '
# bind -x '"\em":/home/me/.vim/findfile.py'
# bind -s '"\ea":"\C-asudo\C-e"'

# if [ -f ~/.zsh_aliases ]; then
#     . ~/.zsh_aliases
# fi

